<?php

/**
 *	Update|Create FormRequest for @Model model
 *  @author @_author
 *	@generated by bAdmin
 */

namespace @RequestNamespace;

use App\Http\Requests\Request;
use @ModelNamespace\@Model;

class @ModelRequest extends Request
{
	/**
	 * Determine if the user is authorized to make this request.
	 *
	 * @return bool
	 */
	public function authorize() {
		return \Gate::allows('save',$this->model());
	}

	/**
	 * Get the validation rules that apply to the request.
	 *
	 * @return array
	 */
	public function rules() {
		return [
			'name'=> "required|".\Util::validationUnique($this->model()),
            'check' => 'sometimes|boolean',
            'check_boolean' => 'required|boolean',
            'image' => $this->model()->exists ? 'sometimes|image' : 'required|image',
            'upload' => $this->model()->exists ? 'sometimes' : 'required',
            'type' => 'required|'.\Util::validationIn($this->model()->types()),
            'user_ids[]' => 'sometimes|array|exists:users,id',
            'user_id' => 'sometimes|exists:users,id',
            'price' => 'sometimes|numeric',
            'date' => 'sometimes|date_format:'.DATE_HUMAN,
            'month' => 'sometimes|date_format:'.MONTH_MYSQL,
            'published_from' => 'sometimes|date_format:'.DATE_HUMAN,
            'published_to' => 'sometimes|date_format:'.DATE_HUMAN."|end_date:published_from",
		];
	}

	/**
	 * Saves the model
	 */
	public function save(){
		ini_set('memory_limit','200M');
        $@entity = $this->model();

        $data = $this->only($@entity->getFillable());
        $data['published_from'] = $this->carbonFromInput('published_from');
        $data['published_to'] = $this->carbonFromInput('published_to');
        $data['date'] = $this->carbonFromInput('date');
        $data['month'] = $this->carbonFromInput('month');

        $data['check'] = $this->boolFromInput('check');
        $data['check'] = $this->get('check_boolean'); // this is cleaner, but it need to AppForm::checkboxBool()
        $data['user_id'] = $this->idFromInput('user_id');   //empty value null attribute

//		dd($data);
        $@entity->fill($data);
        $@entity->save();

        $@entity->@relations()->sync( $this->get('@relations_ids',[])  );
	}

	/**
	 * @return @Model
	 */
	public function model(){
		return $this->modelFromRouteOr(new @Model());
	}
}